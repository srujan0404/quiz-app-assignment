[
    {
        "id": "01",
        "question" : "Which of the following is the correct name of React.js?",
        "options": [
            "React",
            "React.js",
            "ReactJS",
            "All of the above"
        ],
        "answer": "All of the above"
    },
    {
        "id": "02",
        "question" : "Which of the following are the advantages of React.js?",
        "options": [
            "React.js can increase the application's performance with Virtual DOM.",
            "React.js is easy to integrate with other frameworks such as Angular, BackboneJS since it is only a view library.",
            "React.js can render both on client and server side.",
            "All of the above"
        ],
        "answer": "All of the above"
    },
    {
        "id": "03",
        "question" : "Which of the following is not a disadvantage of React.js?",
        "options": [
            "React.js has only a view layer. We have put your code for Ajax requests, events and so on.",
            "The library of React.js is pretty large.",
            "The JSX in React.js makes code easy to read and write.",
            "The learning curve can be steep in React.js."
        ],
        "answer": "The JSX in React.js makes code easy to read and write."
    },
    {
        "id": "04",
        "question" : "Which of the following command is used to install create-react-app?",
        "options": [
            "npm install -g create-react-app",
            "npx create-react-app my-app",
            "npm install create-react-app",
            "npm install -f create-react-app"
        ],
        "answer": "npx create-react-app my-app"
    },
    {
        "id": "05",
        "question" : "What of the following is used in React.js to increase performance?",
        "options": [
            "Original DOM",
            "Virtual DOM",
            "Both A and B.",
            "None of the above."
        ],
        "answer": "Virtual DOM"
    },
    {
        "id": "06",
        "question" : "What is the default port where webpack-server runs?",
        "options": [
            "3000",
            "8080",
            "3030",
            "6060"
        ],
        "answer": "3000"
    },
    {
        "id": "07",
        "question" : "How many numbers of elements a valid react component can return?",
        "options": [
            "1",
            "2",
            "3",
            "Unlimited"
        ],
        "answer": "1"
    },
    {
        "id": "08",
        "question" : "What is the declarative way to render a dynamic list of components based on values in an array?",
        "options": [
            "Using the reduce array method",
            "Using the <Each /> component",
            "Using the Array.map() method",
            "With a for/while loop"
        ],
        "answer": "Using the Array.map() method"
    },
    {
        "id": "09",
        "question" : "What is a state in React?",
        "options": [
            "A permanent storage.",
            "Internal storage of the component.",
            "External storage of the component.",
            "None of the above."
        ],
        "answer": "Internal storage of the component."
    },
    {
        "id": "10",
        "question" : "What are the two ways to handle data in React?",
        "options": [
            "State & Props",
            "Services & Components",
            "State & Services",
            "State & Component"
        ],
        "answer": "State & Props"
    },
    {
        "id": "11",
        "question" : "What is the purpose of keys in React?",
        "options": [
            "To uniquely identify elements in a list.",
            "To improve performance during re-renders.",
            "To manage component state.",
            "Both A and B."
        ],
        "answer": "Both A and B."
    },
    {
        "id": "12",
        "question" : "Which hook is used to manage state in functional components?",
        "options": [
            "useEffect",
            "useState",
            "useContext",
            "useReducer"
        ],
        "answer": "useState"
    },
    {
        "id": "13",
        "question" : "What does JSX stand for?",
        "options": [
            "JavaScript XML",
            "JavaScript and XML",
            "JavaScript X",
            "None of the above"
        ],
        "answer": "JavaScript XML"
    },
    {
        "id": "14",
        "question" : "Which of the following is a lifecycle method in React?",
        "options": [
            "componentDidMount",
            "componentWillUnmount",
            "render",
            "All of the above"
        ],
        "answer": "All of the above"
    },
    {
        "id": "15",
        "question" : "What is the purpose of the useEffect hook?",
        "options": [
            "To perform side effects in functional components.",
            "To manage state.",
            "To handle events.",
            "To render components."
        ],
        "answer": "To perform side effects in functional components."
    },
    {
        "id": "16",
        "question" : "What is the main purpose of React Router?",
        "options": [
            "To manage state.",
            "To handle routing in a React application.",
            "To style components.",
            "To fetch data."
        ],
        "answer": "To handle routing in a React application."
    },
    {
        "id": "17",
        "question" : "What is a higher-order component?",
        "options": [
            "A component that renders another component.",
            "A function that takes a component and returns a new component.",
            "A component that manages state.",
            "None of the above."
        ],
        "answer": "A function that takes a component and returns a new component."
    },
    {
        "id": "18",
        "question" : "What is the purpose of the useContext hook?",
        "options": [
            "To manage local state.",
            "To share state across components.",
            "To handle side effects.",
            "To optimize performance."
        ],
        "answer": "To share state across components."
    },
    {
        "id": "19",
        "question" : "What is the difference between controlled and uncontrolled components?",
        "options": [
            "Controlled components are managed by React, uncontrolled components are managed by the DOM.",
            "Uncontrolled components are managed by React, controlled components are managed by the DOM.",
            "There is no difference.",
            "Both are the same."
        ],
        "answer": "Controlled components are managed by React, uncontrolled components are managed by the DOM."
    },
    {
        "id": "20",
        "question" : "What is the purpose of the React.Fragment?",
        "options": [
            "To group multiple elements without adding extra nodes to the DOM.",
            "To manage state.",
            "To handle events.",
            "To style components."
        ],
        "answer": "To group multiple elements without adding extra nodes to the DOM."
    },
    {
        "id": "21",
        "question" : "What is the purpose of the useReducer hook?",
        "options": [
            "To manage complex state logic.",
            "To handle side effects.",
            "To manage local state.",
            "To optimize performance."
        ],
        "answer": "To manage complex state logic."
    },
    {
        "id": "22",
        "question" : "What is the purpose of the PropTypes library?",
        "options": [
            "To validate props passed to components.",
            "To manage state.",
            "To handle events.",
            "To optimize performance."
        ],
        "answer": "To validate props passed to components."
    },
    {
        "id": "23",
        "question" : "What is the purpose of the React.memo?",
        "options": [
            "To optimize performance by memoizing components.",
            "To manage state.",
            "To handle events.",
            "To validate props."
        ],
        "answer": "To optimize performance by memoizing components."
    },
    {
        "id": "24",
        "question" : "What is the purpose of the useLayoutEffect hook?",
        "options": [
            "To perform side effects after the DOM has been updated.",
            "To manage state.",
            "To handle events.",
            "To optimize performance."
        ],
        "answer": "To perform side effects after the DOM has been updated."
    },
    {
        "id": "25",
        "question" : "What is the purpose of the useImperativeHandle hook?",
        "options": [
            "To customize the instance value that is exposed to parent components.",
            "To manage state.",
            "To handle events.",
            "To optimize performance."
        ],
        "answer": "To customize the instance value that is exposed to parent components."
    },
    {
        "id": "26",
        "question" : "What is the purpose of the useDebugValue hook?",
        "options": [
            "To display a label for custom hooks in React DevTools.",
            "To manage state.",
            "To handle events.",
            "To optimize performance."
        ],
        "answer": "To display a label for custom hooks in React DevTools."
    },
    {
        "id": "27",
        "question" : "What is the purpose of the React.StrictMode?",
        "options": [
            "To highlight potential problems in an application.",
            "To manage state.",
            "To handle events.",
            "To optimize performance."
        ],
        "answer": "To highlight potential problems in an application."
    },
    {
        "id": "28",
        "question" : "What is the purpose of the React.lazy?",
        "options": [
            "To enable code-splitting and lazy loading of components.",
            "To manage state.",
            "To handle events.",
            "To optimize performance."
        ],
        "answer": "To enable code-splitting and lazy loading of components."
    },
    {
        "id": "29",
        "question" : "What is the purpose of the Suspense component?",
        "options": [
            "To handle loading states for lazy-loaded components.",
            "To manage state.",
            "To handle events.",
            "To optimize performance."
        ],
        "answer": "To handle loading states for lazy-loaded components."
    },
    {
        "id": "30",
        "question" : "What is the purpose of the React DevTools?",
        "options": [
            "To inspect and debug React applications.",
            "To manage state.",
            "To handle events.",
            "To optimize performance."
        ],
        "answer": "To inspect and debug React applications."
    }
]